package com.sample;
 dialect "mvel"
import org.kie.api.runtime.KieRuntime
import java.util.ArrayList
import javax.swing.JOptionPane
import javax.swing.JFrame
import java.util.Arrays
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import java.util.List;

global JFrame frame

declare Choice
	decision : String
	question : String
	response : List	
end

function void ask(JFrame frame, Choice c) {
		
		c.setDecision((String) JOptionPane.showInputDialog(frame,
											 c.getQuestion(),
											 "",
											 JOptionPane.QUESTION_MESSAGE,
											 null,
											 c.getResponse().toArray(),
											 c.getResponse().toArray()[0]));
}
function void showresult(JFrame frame, Choice c) {
		List ok =new ArrayList(Arrays.asList("Confirm"));
		
		JOptionPane.showOptionDialog(frame,
											 c.getResponse().toArray()[0],
											 "Result",JOptionPane.YES_NO_OPTION,
											 JOptionPane.QUESTION_MESSAGE,
											 null,
											 ok.toArray(),ok.toArray()[0]
											 );
		
}

rule "start"
	then
		Choice c = new Choice();
		c.setQuestion("Why do you want a classic car?");
		c.setResponse(Arrays.asList("Reliability and convenience bore me",
		"I guess I'm making some kind of statement about something?",
		"I prefer the style",
		"New cars have no soul", "Love speed "));
		insert(c);
		ask(frame, c);
		update(c)
end

rule "Why do you want a classic car?"
	when
		m : Choice(question == "Why do you want a classic car?")
	then
		Choice c = new Choice();
		if (m.getDecision()==(m.getResponse().get(0))) {
			c.setQuestion("Oh yeah thats why?");
			c.setResponse(Arrays.asList("I'm erotically drawn to tow trucks and freeway shoulders",
			 "I want to know how cars work"));
		} else if{ (m.getDecision().equals(m.getResponse().get(1)))
			c.setQuestion("Great what statement?");
			c.setResponse(Arrays.asList("The mothership left me in paris",
			"I live dangerously and nader can suck it",
			"I'm a kook, an American Kook",
			"I take driving seriously and have the gloves to prove it",
			"My wallet is on the chain",
			"I'm a refugee from an alternate future, with zeppelins and shit",
			"I hate people knowing what i drive",
			"I kinda wanted a motorcycle but I have no balance",
			"I like being part of a massive automotive subculture",
			"I will only drive vehicles with two distinct luggage areas",
			"I run an nye themed diner in Las Vegas",
			"I'm really rich but I like to pretend a hippie",
			));
		}
		insert(c);
		ask(frame, c);
		update(c)
end

rule "Oh yeah thats why?"
	when
		m : Choice(question == "Oh yeah thats why?")
	then
		Choice c = new Choice();
		if (m.getDecision()==(m.getResponse().get(0))) {
			c.setQuestion("Ok, should it be pretty quick?");
			c.setResponse(Arrays.asList("Yes", "Also really lovely"));
		} else {
			c.setQuestion("So, something really simple?");
			c.setResponse(Arrays.asList("Sounds good", "Not that archaic","More archaic"));
		}
		insert(c);
		ask(frame, c);
		update(c)
end


rule "Result->Ok, should it be pretty quick?"
	when
		m : Choice(question == "Ok, should it be pretty quick?")
	then
		Choice c = new Choice();
		if (m.getDecision()==(m.getResponse().get(0))) {
			c.setResponse (Arrays.asList("Lotus Elan"));
		} else {
			c.setResponse(Arrays.asList("Alfa Romeo Giuilia Super"));
		}
		insert(c);
		showresult(frame, c);
		update(c)
		
end

rule "So, something really simple?"
	when
		m : Choice(question == "So, something really simple?")
	then
		Choice c = new Choice();
		if (m.getDecision()==(m.getResponse().get(0))) {
			c.setQuestion("Result");
			c.setResponse(Arrays.asList("Citroen 2CV", "VW Thing","Jeep","Honda Civic"));
			insert(c);
			ask(frame,c)
			update(c)
		} else {
			c.setQuestion("So, something really simple?");
			c.setResponse(Arrays.asList("Sounds good", "Not that archaic","More archaic"));
			insert(c);
			ask(frame, c);
			update(c)
		}
		
end

rule "Result -> multiple car choice"
	when
		m : Choice(question == "Result")
	then
		Choice c = new Choice();
		c.setResponse(Arrays.asList(m.getDecision));
		insert(c);
		showresult(frame, c);
		update(c);
end